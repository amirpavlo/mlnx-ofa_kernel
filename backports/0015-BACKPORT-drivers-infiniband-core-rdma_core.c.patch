From: Alaa Hleihel <alaa@mellanox.com>
Subject: [PATCH] BACKPORT: drivers/infiniband/core/rdma_core.c

Change-Id: I33417e4243c3f7fb2a7f596190eda6cd05d0f4db
---
 drivers/infiniband/core/rdma_core.c | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

--- a/drivers/infiniband/core/rdma_core.c
+++ b/drivers/infiniband/core/rdma_core.c
@@ -74,7 +74,11 @@ static int uverbs_try_lock_object(struct
 	 * this lock.
 	 */
 	if (!exclusive)
+#ifdef HAVE___ATOMIC_ADD_UNLESS
 		return __atomic_add_unless(&uobj->usecnt, 1, -1) == -1 ?
+#else
+		return atomic_add_unless(&uobj->usecnt, 1, -1) == -1 ?
+#endif
 			-EBUSY : 0;
 
 	/* lock is either WRITE or DESTROY - should be exclusive */
@@ -104,6 +108,7 @@ static int idr_add_uobj(struct ib_uobjec
 {
 	int ret;
 
+#ifdef HAVE_IDR_ALLOC
 	idr_preload(GFP_KERNEL);
 	spin_lock(&uobj->context->ufile->idr_lock);
 
@@ -121,6 +126,20 @@ static int idr_add_uobj(struct ib_uobjec
 	idr_preload_end();
 
 	return ret < 0 ? ret : 0;
+#else
+retry:
+	if (!idr_pre_get(&uobj->context->ufile->idr, GFP_KERNEL))
+		return -ENOMEM;
+
+	spin_lock(&uobj->context->ufile->idr_lock);
+	ret = idr_get_new(&uobj->context->ufile->idr, NULL, &uobj->id);
+	spin_unlock(&uobj->context->ufile->idr_lock);
+
+	if (ret == -EAGAIN)
+		goto retry;
+
+	return ret;
+#endif
 }
 
 /*
@@ -230,15 +249,19 @@ static struct ib_uobject *alloc_begin_id
 	if (ret)
 		goto uobj_put;
 
+#ifdef HAVE_CGROUP_RDMA_H
 	ret = ib_rdmacg_try_charge(&uobj->cg_obj, ucontext->device,
 				   RDMACG_RESOURCE_HCA_OBJECT);
 	if (ret)
 		goto idr_remove;
+#endif
 
 	return uobj;
 
+#ifdef HAVE_CGROUP_RDMA_H
 idr_remove:
 	uverbs_idr_remove_uobj(uobj);
+#endif
 uobj_put:
 	uverbs_uobject_put(uobj);
 	return ERR_PTR(ret);
@@ -312,8 +335,10 @@ static int __must_check remove_commit_id
 	if (why == RDMA_REMOVE_DESTROY && ret)
 		return ret;
 
+#ifdef HAVE_CGROUP_RDMA_H
 	ib_rdmacg_uncharge(&uobj->cg_obj, uobj->context->device,
 			   RDMACG_RESOURCE_HCA_OBJECT);
+#endif
 	uverbs_idr_remove_uobj(uobj);
 
 	return ret;
@@ -454,8 +479,10 @@ int rdma_alloc_commit_uobject(struct ib_
 static void alloc_abort_idr_uobject(struct ib_uobject *uobj)
 {
 	uverbs_idr_remove_uobj(uobj);
+#ifdef HAVE_CGROUP_RDMA_H
 	ib_rdmacg_uncharge(&uobj->cg_obj, uobj->context->device,
 			   RDMACG_RESOURCE_HCA_OBJECT);
+#endif
 	uverbs_uobject_put(uobj);
 }
 
