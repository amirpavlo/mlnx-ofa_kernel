From: Max Gurtovoy <maxg@mellanox.com>
Subject: [PATCH] BACKPORT: nvmf host

Change-Id: I2f69a14f5af0e22d673f670f5fc6d5256f319713
Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
---
 drivers/nvme/host/lightnvm.c |  4 ++++
 drivers/nvme/host/nvme.h     |  2 +-
 drivers/nvme/host/pci.c      | 14 ++++++++++++++
 drivers/nvme/host/rdma.c     |  6 ++++++
 include/linux/nvme-rdma.h    |  6 ++++++
 include/linux/nvme.h         |  6 ++++++
 6 files changed, 37 insertions(+), 1 deletion(-)

--- a/drivers/nvme/host/lightnvm.c
+++ b/drivers/nvme/host/lightnvm.c
@@ -20,6 +20,8 @@
  *
  */
 
+#ifdef HAVE_LIGHTNVM_NVM_DEV
+
 #include "nvme.h"
 
 #include <linux/nvme.h>
@@ -650,3 +652,5 @@ int nvme_nvm_ns_supported(struct nvme_ns
 
 	return 0;
 }
+
+#endif /* HAVE_LIGHTNVM_NVM_DEV */
--- a/drivers/nvme/host/nvme.h
+++ b/drivers/nvme/host/nvme.h
@@ -305,7 +305,7 @@ int nvme_sg_io(struct nvme_ns *ns, struc
 int nvme_sg_io32(struct nvme_ns *ns, unsigned long arg);
 int nvme_sg_get_version_num(int __user *ip);
 
-#ifdef CONFIG_NVM
+#if defined(CONFIG_NVM) && defined(HAVE_LIGHTNVM_NVM_DEV)
 int nvme_nvm_ns_supported(struct nvme_ns *ns, struct nvme_id_ns *id);
 int nvme_nvm_register(struct nvme_ns *ns, char *disk_name, int node,
 		      const struct attribute_group *attrs);
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@ -269,12 +269,14 @@ static int nvme_init_request(void *data,
 	return 0;
 }
 
+#ifdef HAVE_BLK_MQ_OPS_MAP_QUEUES
 static int nvme_pci_map_queues(struct blk_mq_tag_set *set)
 {
 	struct nvme_dev *dev = set->driver_data;
 
 	return blk_mq_pci_map_queues(set, to_pci_dev(dev->dev));
 }
+#endif
 
 /**
  * __nvme_submit_cmd() - Copy a command into a queue and ring the doorbell
@@ -516,8 +518,12 @@ static int nvme_map_data(struct nvme_dev
 		goto out;
 
 	ret = BLK_MQ_RQ_QUEUE_BUSY;
+#ifdef HAVE_DMA_ATTR_NO_WARN
 	if (!dma_map_sg_attrs(dev->dev, iod->sg, iod->nents, dma_dir,
 				DMA_ATTR_NO_WARN))
+#else
+	if (!dma_map_sg(dev->dev, iod->sg, iod->nents, dma_dir))
+#endif
 		goto out;
 
 	if (!nvme_setup_prps(dev, req, size))
@@ -1143,6 +1149,9 @@ static int nvme_create_queue(struct nvme
 static struct blk_mq_ops nvme_mq_admin_ops = {
 	.queue_rq	= nvme_queue_rq,
 	.complete	= nvme_complete_rq,
+#ifdef HAVE_BLK_MQ_OPS_MAP_QUEUE
+	.map_queue      = blk_mq_map_queue,
+#endif
 	.init_hctx	= nvme_admin_init_hctx,
 	.exit_hctx      = nvme_admin_exit_hctx,
 	.init_request	= nvme_admin_init_request,
@@ -1152,9 +1161,14 @@ static struct blk_mq_ops nvme_mq_admin_o
 static struct blk_mq_ops nvme_mq_ops = {
 	.queue_rq	= nvme_queue_rq,
 	.complete	= nvme_complete_rq,
+#ifdef HAVE_BLK_MQ_OPS_MAP_QUEUE
+	.map_queue      = blk_mq_map_queue,
+#endif
 	.init_hctx	= nvme_init_hctx,
 	.init_request	= nvme_init_request,
+#ifdef HAVE_BLK_MQ_OPS_MAP_QUEUES
 	.map_queues	= nvme_pci_map_queues,
+#endif
 	.timeout	= nvme_timeout,
 	.poll		= nvme_poll,
 };
--- a/drivers/nvme/host/rdma.c
+++ b/drivers/nvme/host/rdma.c
@@ -1514,6 +1514,9 @@ static void nvme_rdma_complete_rq(struct
 static struct blk_mq_ops nvme_rdma_mq_ops = {
 	.queue_rq	= nvme_rdma_queue_rq,
 	.complete	= nvme_rdma_complete_rq,
+#ifdef HAVE_BLK_MQ_OPS_MAP_QUEUE
+	.map_queue      = blk_mq_map_queue,
+#endif
 	.init_request	= nvme_rdma_init_request,
 	.exit_request	= nvme_rdma_exit_request,
 	.reinit_request	= nvme_rdma_reinit_request,
@@ -1525,6 +1528,9 @@ static struct blk_mq_ops nvme_rdma_mq_op
 static struct blk_mq_ops nvme_rdma_admin_mq_ops = {
 	.queue_rq	= nvme_rdma_queue_rq,
 	.complete	= nvme_rdma_complete_rq,
+#ifdef HAVE_BLK_MQ_OPS_MAP_QUEUE
+	.map_queue      = blk_mq_map_queue,
+#endif
 	.init_request	= nvme_rdma_init_admin_request,
 	.exit_request	= nvme_rdma_exit_admin_request,
 	.reinit_request	= nvme_rdma_reinit_request,
--- a/include/linux/nvme-rdma.h
+++ b/include/linux/nvme-rdma.h
@@ -11,6 +11,11 @@
  * more details.
  */
 
+/* build vs. Non-MLNX_OFED .h */
+#if 0
+#include_next <linux/nvme-rdma.h>
+#else
+
 #ifndef _LINUX_NVME_RDMA_H
 #define _LINUX_NVME_RDMA_H
 
@@ -69,3 +74,4 @@ struct nvme_rdma_cm_rej {
 };
 
 #endif /* _LINUX_NVME_RDMA_H */
+#endif /* build vs. Non-MLNX_OFED .h */
--- a/include/linux/nvme.h
+++ b/include/linux/nvme.h
@@ -12,6 +12,11 @@
  * more details.
  */
 
+/* build vs. Non-MLNX_OFED .h */
+#if 0
+#include_next <linux/nvme.h>
+#else
+
 #ifndef _LINUX_NVME_H
 #define _LINUX_NVME_H
 
@@ -994,3 +999,4 @@ struct nvme_completion {
 	(((major) << 16) | ((minor) << 8) | (tertiary))
 
 #endif /* _LINUX_NVME_H */
+#endif /* build vs. Non-MLNX_OFED .h */
