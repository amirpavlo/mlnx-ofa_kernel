/* config.h.in.  Generated from configure.ac by autoheader.  */

/* eswitch_mode_get/set is defined */
#undef DEVLINK_HAS_ESWITCH_MODE_GET_SET

/* __vlan_hwaccel_put_tag has 3 parameters */
#undef HAVE_3_PARAMS_FOR_VLAN_HWACCEL_PUT_TAG

/* addrconf_ifid_eui48 is defined */
#undef HAVE_ADDRCONF_IFID_EUI48

/* ndo_add_vxlan_port is defined */
#undef HAVE_ADD_VXLAN_PORT_UDP_TUNNEL

/* alloc_etherdev_mq is defined */
#undef HAVE_ALLOC_ETHERDEV_MQ

/* alloc_netdev_mqs has 6 params */
#undef HAVE_ALLOC_NETDEV_MQS_6_PARAMS

/* alloc_workqueue is defined */
#undef HAVE_ALLOC_WORKQUEUE

/* struct blk_mq_ops has map_queue */
#undef HAVE_BLK_MQ_OPS_MAP_QUEUE

/* struct blk_mq_ops has map_queues */
#undef HAVE_BLK_MQ_OPS_MAP_QUEUES

/* include/linux/blk-mq-pci.h exists */
#undef HAVE_BLK_MQ_PCI_H

/* blk_mq_unique_tag exist */
#undef HAVE_BLK_MQ_UNIQUE_TAG

/* blk_queue_virt_boundary exist */
#undef HAVE_BLK_QUEUE_VIRT_BOUNDARY

/* include/net/bonding.h exists */
#undef HAVE_BONDING_H

/* build_skb is defined */
#undef HAVE_BUILD_SKB

/* CLASS_ATTR_STRING is defined */
#undef HAVE_CLASS_ATTR_STRING

/* class devnode gets umode_t */
#undef HAVE_CLASS_DEVNODE_UMODE_T

/* cycle_t is defined in linux/clocksource.h */
#undef HAVE_CLOCKSOURCE_CYCLE_T

/* default_groups is list_head */
#undef HAVE_CONFIGFS_DEFAULT_GROUPS_LIST

/* cyclecounter_cyc2ns has 4 parameters */
#undef HAVE_CYCLECOUNTER_CYC2NS_4_PARAMS

/* getnumtcs returns int */
#undef HAVE_DCBNL_RTNL_OPS_GETNUMTCS_RET_INT

/* include/net/devlink.h exists */
#undef HAVE_DEVLINK_H

/* dev_alloc_pages is defined */
#undef HAVE_DEV_ALLOC_PAGES

/* dev_mc_del is defined */
#undef HAVE_DEV_MC_DEL

/* dev_uc_del is defined */
#undef HAVE_DEV_UC_DEL

/* DMA_ATTR_NO_WARN is defined */
#undef HAVE_DMA_ATTR_NO_WARN

/* dst_get_neighbour is defined */
#undef HAVE_DST_GET_NEIGHBOUR

/* dst_neigh_lookup is defined */
#undef HAVE_DST_NEIGH_LOOKUP

/* elfcorehdr_addr is exported by the kernel */
#undef HAVE_ELFCOREHDR_ADDR_EXPORTED

/* ether_addr_copy is defined */
#undef HAVE_ETHER_ADDR_COPY

/* struct ethtool_flow_ext is defined */
#undef HAVE_ETHTOOL_FLOW_EXT

/* ethtool_flow_ext has h_dest */
#undef HAVE_ETHTOOL_FLOW_EXT_H_DEST

/* union ethtool_flow_union is defined */
#undef HAVE_ETHTOOL_FLOW_UNION

/* struct ethtool_ops_ext is defined */
#undef HAVE_ETHTOOL_OPS_EXT

/* ethtool_ops get_rxnfc gets u32 *rule_locs */
#undef HAVE_ETHTOOL_OPS_GET_RXNFC_U32_RULE_LOCS

/* ETHTOOL_xLINKSETTINGS API is defined */
#undef HAVE_ETHTOOL_xLINKSETTINGS

/* eth_get_headlen is defined */
#undef HAVE_ETH_GET_HEADLEN

/* ETH_P_8021AD exists */
#undef HAVE_ETH_P_8021AD

/* eth_random_addr is defined */
#undef HAVE_ETH_RANDOM_ADDR

/* ETH_SS_RSS_HASH_FUNCS is defined */
#undef HAVE_ETH_SS_RSS_HASH_FUNCS

/* fdget is defined */
#undef HAVE_FDGET

/* fib_lookup has 4 params */
#undef HAVE_FIB_LOOKUP_4_PARAMS

/* fib_lookup is exported by the kernel */
#undef HAVE_FIB_LOOKUP_EXPORTED

/* fib_res_put */
#undef HAVE_FIB_RES_PUT

/* flowi4, flowi6 is defined */
#undef HAVE_FLOWI_AF_SPECIFIC_INSTANCES

/* FLOW_DISSECTOR_KEY_VLAN is defined */
#undef HAVE_FLOW_DISSECTOR_KEY_VLAN

/* HAVE_GET_MODULE_EEPROM is defined */
#undef HAVE_GET_MODULE_EEPROM

/* HAVE_GET_MODULE_EEPROM_EXT is defined */
#undef HAVE_GET_MODULE_EEPROM_EXT

/* get/set_channels is defined */
#undef HAVE_GET_SET_CHANNELS

/* get/set_channels is defined in ethtool_ops_ext */
#undef HAVE_GET_SET_CHANNELS_EXT

/* HAVE_GET_SET_DUMP is defined */
#undef HAVE_GET_SET_DUMP

/* get/set_flags is defined */
#undef HAVE_GET_SET_FLAGS

/* get/set_link_ksettings is defined */
#undef HAVE_GET_SET_LINK_KSETTINGS

/* get/set_msglevel is defined */
#undef HAVE_GET_SET_MSGLEVEL

/* get/set_priv_flags is defined */
#undef HAVE_GET_SET_PRIV_FLAGS

/* get/set_rxfh is defined */
#undef HAVE_GET_SET_RXFH

/* get/set_rxfh_indir is defined */
#undef HAVE_GET_SET_RXFH_INDIR

/* get/set_rxfh_indir is defined */
#undef HAVE_GET_SET_RXFH_INDIR_EXT

/* get/set_rx_csum is defined */
#undef HAVE_GET_SET_RX_CSUM

/* get/set_sg is defined */
#undef HAVE_GET_SET_SG

/* get/set_tso is defined */
#undef HAVE_GET_SET_TSO

/* get/set_tunable is defined */
#undef HAVE_GET_SET_TUNABLE

/* get/set_tx_csum is defined */
#undef HAVE_GET_SET_TX_CSUM

/* get_ts_info is defined */
#undef HAVE_GET_TS_INFO

/* get_ts_info is defined in ethtool_ops_ext */
#undef HAVE_GET_TS_INFO_EXT

/* GET_UNUSED_FD_FLAGS is defined */
#undef HAVE_GET_UNUSED_FD_FLAGS

/* get_user_pages has 8 params */
#undef HAVE_GET_USER_PAGES_8_PARAMS

/* get_user_pages uses gup_flags */
#undef HAVE_GET_USER_PAGES_GUP_FLAGS

/* get_user_pages_remote is defined with 7 parameters */
#undef HAVE_GET_USER_PAGES_REMOTE_7_PARAMS

/* get_user_pages_remote is defined with 8 parameters */
#undef HAVE_GET_USER_PAGES_REMOTE_8_PARAMS

/* get_user_pages_remote is defined with 8 parameters with locked */
#undef HAVE_GET_USER_PAGES_REMOTE_8_PARAMS_W_LOCKED

/* hlist_for_each_entry has 3 params */
#undef HAVE_HLIST_FOR_EACH_ENTRY_3_PARAMS

/* icmpv6_send has 4 parameters */
#undef HAVE_ICMPV6_SEND_4_PARAMS

/* idr_alloc is defined */
#undef HAVE_IDR_ALLOC

/* idr_alloc_cyclic is defined */
#undef HAVE_IDR_ALLOC_CYCLIC

/* ieee_getets/ieee_setets is defined and dcbnl defined */
#undef HAVE_IEEE_DCBNL_ETS

/* ieee_getqcn is defined */
#undef HAVE_IEEE_GETQCN

/* ieee_getmaxrate/ieee_setmaxrate is defined */
#undef HAVE_IEEE_GET_SET_MAXRATE

/* trust is defined */
#undef HAVE_IFLA_VF_IB_NODE_PORT_GUID

/* struct ifla_vf_stats is defined */
#undef HAVE_IFLA_VF_STATS

/* if_list is defined */
#undef HAVE_INET6_IF_LIST

/* inet_confirm_addr has 5 parameters */
#undef HAVE_INET_CONFIRM_ADDR_5_PARAMS

/* inet_confirm_addr is exported by the kernel */
#undef HAVE_INET_CONFIRM_ADDR_EXPORTED

/* inet_get_local_port_range has 3 parameters */
#undef HAVE_INET_GET_LOCAL_PORT_RANGE_3_PARAMS

/* include/linux/inet_lro.h exists */
#undef HAVE_INET_LRO_H

/* include/linux/interval_tree_generic.h exists */
#undef HAVE_INTERVAL_TREE_GENERIC_H

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* io_mapping_map_wc has 3 params */
#undef HAVE_IO_MAPPING_MAP_WC_3_PARAMS

/* ip4_dst_hoplimit is defined */
#undef HAVE_IP4_DST_HOPLIMIT

/* ip6_dst_hoplimit is exported by the kernel */
#undef HAVE_IP6_DST_HOPLIMIT

/* ip6_rt_put is defined */
#undef HAVE_IP6_RT_PUT

/* ipv6_addr_copy is defined */
#undef HAVE_IPV6_ADDR_COPY

/* ipv6_chk_addr accepts a const second parameter */
#undef HAVE_IPV6_CHK_ADDR_TAKES_CONST

/* irq_data member affinity is defined */
#undef HAVE_IRQ_DATA_AFFINITY

/* irq_desc_get_irq_data is defined */
#undef HAVE_IRQ_DESC_GET_IRQ_DATA

/* include/linux/irq_poll.h exists */
#undef HAVE_IRQ_POLL_H

/* irq_to_desc is exported by the kernel */
#undef HAVE_IRQ_TO_DESC_EXPORTED

/* iscsit_find_cmd_from_itt is defined */
#undef HAVE_ISCSIT_FIND_CMD_FROM_ITT

/* iscsit_transport has member iscsit_get_sup_prot_ops */
#undef HAVE_ISCSIT_TRANSPORT_HAS_GET_SUP_PROT_OPS

/* iscsit_get_rx_pdu is defined */
#undef HAVE_ISCSIT_TRANSPORT_ISCSIT_GET_RX_PDU

/* rdma_shutdown is defined */
#undef HAVE_ISCSIT_TRANSPORT_RDMA_SHUTDOWN

/* iscsi_proto.h has structure iscsi_cmd */
#undef HAVE_ISCSI_CMD

/* iscsi_conn has members local_sockaddr */
#undef HAVE_ISCSI_CONN_LOCAL_SOCKADDR

/* iscsi_conn has member login_sockaddr */
#undef HAVE_ISCSI_CONN_LOGIN_SOCKADDR

/* iscsi_target_core.h and iscsi_target_stat.h are under include/ */
#undef HAVE_ISCSI_TARGET_CORE_ISCSI_TARGET_STAT_H

/* check_protection is defined */
#undef HAVE_ISCSI_TRANSPORT_CHECK_PROTECTION

/* is_tcf_mirred_redirect is defined */
#undef HAVE_IS_TCF_MIRRED_REDIRECT

/* is_tcf_vlan is defined */
#undef HAVE_IS_TCF_VLAN

/* is_vlan_dev is defined */
#undef HAVE_IS_VLAN_DEV

/* kfree_const is defined */
#undef HAVE_KFREE_CONST

/* kmalloc_array is defined */
#undef HAVE_KMALLOC_ARRAY

/* highmem.h has kmap_atomic function with km_type */
#undef HAVE_KM_TYPE

/* struct kthread_work is defined */
#undef HAVE_KTHREAD_WORK

/* ktime_get_boot_ns is defined */
#undef HAVE_KTIME_GET_BOOT_NS

/* ktime_get_ns defined */
#undef HAVE_KTIME_GET_NS

/* ktime_get_real_ns is defined */
#undef HAVE_KTIME_GET_REAL_NS

/* enum netdev_lag_tx_type is defined */
#undef HAVE_LAG_TX_TYPE

/* nvm_dev dev is defined */
#undef HAVE_LIGHTNVM_NVM_DEV

/* linkstate is defined */
#undef HAVE_LINKSTATE

/* linux/printk.h is defined */
#undef HAVE_LINUX_PRINTK_H

/* memchr_inv is defined */
#undef HAVE_MEMCHR_INV

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* struct page has _count */
#undef HAVE_MM_PAGE__COUNT

/* mm_types.h struct mm_struct has free_area_cache */
#undef HAVE_MM_STRUCT_FREE_AREA_CACHE

/* napi_alloc_skb is defined */
#undef HAVE_NAPI_ALLOC_SKB

/* napi_complete_done is defined */
#undef HAVE_NAPI_COMPLETE_DONE

/* napi_consume_skb is defined */
#undef HAVE_NAPI_CONSUME_SKB

/* napi_hash_add is defined */
#undef HAVE_NAPI_HASH_ADD

/* napi_schedule_irqoff is defined */
#undef HAVE_NAPI_SCHEDULE_IRQOFF

/* ndo_busy_poll is defined */
#undef HAVE_NDO_BUSY_POLL

/* ndo_fix_features is defined */
#undef HAVE_NDO_FIX_FEATURES

/* ndo_get_iflink is defined */
#undef HAVE_NDO_GET_IFLINK

/* ndo_get_phys_port_name is defined */
#undef HAVE_NDO_GET_PHYS_PORT_NAME

/* ndo_get_stats64 is defined */
#undef HAVE_NDO_GET_STATS64

/* ndo_get_vf_stats is defined */
#undef HAVE_NDO_GET_VF_STATS

/* ndo_vlan_rx_add_vid has 2 parameters and returns int */
#undef HAVE_NDO_RX_ADD_VID_HAS_2_PARAMS_RET_INT

/* ndo_vlan_rx_add_vid has 3 parameters */
#undef HAVE_NDO_RX_ADD_VID_HAS_3_PARAMS

/* ndo_rx_flow_steer is defined */
#undef HAVE_NDO_RX_FLOW_STEER

/* ndo_setup_tc is defined */
#undef HAVE_NDO_SETUP_TC

/* ndo_setup_tc takes 4 parameters */
#undef HAVE_NDO_SETUP_TC_4_PARAMS

/* ndo_set_features is defined */
#undef HAVE_NDO_SET_FEATURES

/* ndo_set_tx_maxrate is defined */
#undef HAVE_NDO_SET_TX_MAXRATE

/* ndo_set_vf_guid is defined */
#undef HAVE_NDO_SET_VF_GUID

/* ndo_set_vf_mac is defined */
#undef HAVE_NDO_SET_VF_MAC

/* ndo_set_vf_vlan has 5 parameters */
#undef HAVE_NDO_SET_VF_VLAN_HAS_5_PARAMS

/* netdev_bonding_info is defined */
#undef HAVE_NETDEV_BONDING_INFO

/* is defined */
#undef HAVE_NETDEV_EXTENDED_DEV_PORT

/* is defined */
#undef HAVE_NETDEV_EXTENDED_HW_FEATURES

/* is defined */
#undef HAVE_NETDEV_EXTENDED_NDO_BUSY_POLL

/* is defined */
#undef HAVE_NETDEV_EXTENDED_WANTED_FEATURES

/* ndo_get_phys_port_id is defined */
#undef HAVE_NETDEV_EXT_NDO_GET_PHYS_PORT_ID

/* netdev_features_t is defined */
#undef HAVE_NETDEV_FEATURES_T

/* netdev_master_upper_dev_get_rcu is defined */
#undef HAVE_NETDEV_FOR_EACH_ALL_UPPER_DEV_RCU

/* netdev_for_each_mc_addr is defined */
#undef HAVE_NETDEV_FOR_EACH_MC_ADDR

/* netdev_get_num_tc is defined */
#undef HAVE_NETDEV_GET_NUM_TC

/* netdev_get_tx_queue is defined */
#undef HAVE_NETDEV_GET_TX_QUEUE

/* netdev_has_upper_dev_all_rcu is defined */
#undef HAVE_NETDEV_HAS_UPPER_DEV_ALL_RCU

/* hw_enc_features is defined */
#undef HAVE_NETDEV_HW_ENC_FEATURES

/* hw_features is defined */
#undef HAVE_NETDEV_HW_FEATURES

/* IFF_LIVE_ADDR_CHANGE is defined */
#undef HAVE_NETDEV_IFF_LIVE_ADDR_CHANGE

/* IFF_UNICAST_FLT is defined */
#undef HAVE_NETDEV_IFF_UNICAST_FLT

/* netdev_master_upper_dev_get is defined */
#undef HAVE_NETDEV_MASTER_UPPER_DEV_GET

/* netdev_master_upper_dev_get_rcu is defined */
#undef HAVE_NETDEV_MASTER_UPPER_DEV_GET_RCU

/* is defined */
#undef HAVE_NETDEV_NDO_GET_PHYS_PORT_ID

/* netdev_notifier_changeupper_info is defined */
#undef HAVE_NETDEV_NOTIFIER_CHANGEUPPER_INFO

/* netdev_notifier_info_to_dev is defined */
#undef HAVE_NETDEV_NOTIFIER_INFO_TO_DEV

/* ndo_fix_features is defined in net_device_ops_ext */
#undef HAVE_NETDEV_OPS_EXT_NDO_FIX_FEATURES

/* ndo_set_features is defined in net_device_ops_ext */
#undef HAVE_NETDEV_OPS_EXT_NDO_SET_FEATURES

/* ndo_set_vf_link_state is defined */
#undef HAVE_NETDEV_OPS_EXT_NDO_SET_VF_LINK_STATE

/* ndo_set_vf_spoofchk is defined in net_device_ops_ext */
#undef HAVE_NETDEV_OPS_EXT_NDO_SET_VF_SPOOFCHK

/* ndo_set_vf_link_state is defined in net_device_ops */
#undef HAVE_NETDEV_OPS_NDO_SET_VF_LINK_STATE

/* ndo_set_vf_spoofchk is defined in net_device_ops */
#undef HAVE_NETDEV_OPS_NDO_SET_VF_SPOOFCHK

/* ndo_set_vf_trust is defined in net_device_ops */
#undef HAVE_NETDEV_OPS_NDO_SET_VF_TRUST

/* netdev_phys_item_id is defined */
#undef HAVE_NETDEV_PHYS_ITEM_ID

/* netdev_rss_key_fill is defined */
#undef HAVE_NETDEV_RSS_KEY_FILL

/* rx_cpu_rmap is defined */
#undef HAVE_NETDEV_RX_CPU_RMAP

/* netdev_set_num_tc is defined */
#undef HAVE_NETDEV_SET_NUM_TC

/* netdev_stats_to_stats64 is defined */
#undef HAVE_NETDEV_STATS_TO_STATS64

/* netdev_txq_bql_complete_prefetchw is defined */
#undef HAVE_NETDEV_TXQ_BQL_PREFETCHW

/* is defined */
#undef HAVE_NETDEV_UPDATE_FEATURES

/* netdev_walk_all_upper_dev_rcu is defined */
#undef HAVE_NETDEV_WALK_ALL_UPPER_DEV_RCU

/* wanted_features is defined */
#undef HAVE_NETDEV_WANTED_FEATURES

/* struct netdev_xdp is defined */
#undef HAVE_NETDEV_XDP

/* NETIF_F_GSO_PARTIAL is defined in netdev_features.h */
#undef HAVE_NETIF_F_GSO_PARTIAL

/* NETIF_F_GSO_UDP_TUNNEL is defined in netdev_features.h */
#undef HAVE_NETIF_F_GSO_UDP_TUNNEL

/* NETIF_F_GSO_UDP_TUNNEL_CSUM is defined in netdev_features.h */
#undef HAVE_NETIF_F_GSO_UDP_TUNNEL_CSUM

/* NETIF_F_HW_VLAN_STAG_RX is defined in netdev_features.h */
#undef HAVE_NETIF_F_HW_VLAN_STAG_RX

/* NETIF_F_RXALL is defined in netdev_features.h */
#undef HAVE_NETIF_F_RXALL

/* NETIF_F_RXFCS is defined in netdev_features.h */
#undef HAVE_NETIF_F_RXFCS

/* NETIF_F_RXHASH is defined in netdev_features.h */
#undef HAVE_NETIF_F_RXHASH

/* NETIF_IS_BOND_MASTER is defined in netdev_features.h */
#undef HAVE_NETIF_IS_BOND_MASTER

/* netif_keep_dst is defined */
#undef HAVE_NETIF_KEEP_DST

/* netif_set_real_num_rx_queues is defined */
#undef HAVE_NETIF_SET_REAL_NUM_RX_QUEUES

/* netif_set_real_num_tx_queues is defined */
#undef HAVE_NETIF_SET_REAL_NUM_TX_QUEUES

/* is defined */
#undef HAVE_NETIF_SET_XPS_QUEUE

/* netif_trans_update is defined */
#undef HAVE_NETIF_TRANS_UPDATE

/* netif_tx_napi_add is defined */
#undef HAVE_NETIF_TX_NAPI_ADD

/* netif_tx_queue_stopped is defined */
#undef HAVE_NETIF_TX_QUEUE_STOPPED

/* netif_xmit_stopped is defined */
#undef HAVE_NETIF_XMIT_STOPPED

/* netlink_callback module is defined */
#undef HAVE_NETLINK_CALLBACK_MODULE

/* netlink_capable is defined */
#undef HAVE_NETLINK_CAPABLE

/* netlink_dump_control dump is defined */
#undef HAVE_NETLINK_DUMP_CONTROL_DUMP

/* netlink_dump_control module is defined */
#undef HAVE_NETLINK_DUMP_CONTROL_MODULE

/* is defined */
#undef HAVE_NETLINK_DUMP_START_5P

/* netlink_kernel_cfg input is defined */
#undef HAVE_NETLINK_KERNEL_CFG_INPUT

/* netlink_kernel_create has 3 params */
#undef HAVE_NETLINK_KERNEL_CREATE_3_PARAMS

/* netlink_skb_params has sk */
#undef HAVE_NETLINK_SKB_PARMS_SK

/* dev_port is defined */
#undef HAVE_NET_DEVICE_DEV_PORT

/* is defined */
#undef HAVE_NET_DEVICE_EXTENDED_TX_EXT

/* net_device min/max is defined */
#undef HAVE_NET_DEVICE_MIN_MAX_MTU

/* neigh_priv_len is defined */
#undef HAVE_NET_DEVICE_NEIGH_PRIV_LEN

/* struct net_device_ops_ext is defined */
#undef HAVE_NET_DEVICE_OPS_EXT

/* net/flow_keys.h exists */
#undef HAVE_NET_FLOW_KEYS_H

/* page_is_pfmemalloc is defined */
#undef HAVE_PAGE_IS_PFMEMALLOC

/* page_ref_count/add/sub/inc defined */
#undef HAVE_PAGE_REF_COUNT_ADD_SUB_INC

/* pat.h has pat_enabled as a function */
#undef HAVE_PAT_ENABLED_AS_FUNCTION

/* pcie_link_width is defined */
#undef HAVE_PCIE_LINK_WIDTH

/* pci_bus_speed is defined */
#undef HAVE_PCI_BUS_SPEED

/* PCI_DEV_FLAGS_ASSIGNED is defined */
#undef HAVE_PCI_DEV_FLAGS_ASSIGNED

/* pcie_mpss is defined */
#undef HAVE_PCI_DEV_PCIE_MPSS

/* pci_driver sriov_configure is defined */
#undef HAVE_PCI_DRIVER_SRIOV_CONFIGURE

/* pci_enable_msix_range is defined */
#undef HAVE_PCI_ENABLE_MSIX_RANGE

/* pci_num_vf is defined */
#undef HAVE_PCI_NUM_VF

/* pci_physfn is defined */
#undef HAVE_PCI_PHYSFN

/* pci_sriov_get_totalvfs is defined */
#undef HAVE_PCI_SRIOV_GET_TOTALVFS

/* pci_vfs_assigned is defined */
#undef HAVE_PCI_VFS_ASSIGNED

/* PDE_DATA is defined */
#undef HAVE_PDE_DATA

/* pernet_operations_id is defined */
#undef HAVE_PERENT_OPERATIONS_ID

/* pinned_vm is defined */
#undef HAVE_PINNED_VM

/* prandom_u32 is defined */
#undef HAVE_PRANDOM_U32

/* proc_set_user is defined */
#undef HAVE_PROC_SET_USER

/* ptp_clock_info is defined */
#undef HAVE_PTP_CLOCK_INFO

/* gettime 32bit is defined */
#undef HAVE_PTP_CLOCK_INFO_GETTIME_32BIT

/* n_pins is defined */
#undef HAVE_PTP_CLOCK_INFO_N_PINS

/* ptp_clock_register has 2 params is defined */
#undef HAVE_PTP_CLOCK_REGISTER_2_PARAMS

/* reciprocal_scale is defined */
#undef HAVE_RECIPROCAL_SCALE

/* register_netdevice_notifier_rh is defined */
#undef HAVE_REGISTER_NETDEVICE_NOTIFIER_RH

/* register_net_sysctl is defined */
#undef HAVE_REGISTER_NET_SYSCTL

/* dellink has 2 paramters */
#undef HAVE_RTNL_LINK_OPS_DELLINK_2_PARAMS

/* newlink has 4 paramters */
#undef HAVE_RTNL_LINK_OPS_NEWLINK_4_PARAMS

/* rtble has direct dst */
#undef HAVE_RT_DIRECT_DST

/* rt_uses_gateway is defined */
#undef HAVE_RT_USES_GATEWAY

/* get_rxfh_indir_size is defined */
#undef HAVE_RXFH_INDIR_SIZE

/* get_rxfh_indir_size is defined in ethtool_ops_ext */
#undef HAVE_RXFH_INDIR_SIZE_EXT

/* scsi_change_queue_depth exist */
#undef HAVE_SCSI_CHANGE_QUEUE_DEPTH

/* scsi_cmnd has members prot_flags */
#undef HAVE_SCSI_CMND_PROT_FLAGS

/* scsi_device.h struct scsi_device has u64 lun */
#undef HAVE_SCSI_DEVICE_U64_LUN

/* Scsi_Host has members nr_hw_queues */
#undef HAVE_SCSI_HOST_NR_HW_QUEUES

/* scsi_host_template has members change_queue_type */
#undef HAVE_SCSI_HOST_TEMPLATE_CHANGE_QUEUE_TYPE

/* scsi_host_template has members track_queue_depth */
#undef HAVE_SCSI_HOST_TEMPLATE_TRACK_QUEUE_DEPTH

/* scsi_host_template has members use_blk_tags */
#undef HAVE_SCSI_HOST_TEMPLATE_USE_BLK_TAGS

/* scsi_host_template has members use_host_wide_tags */
#undef HAVE_SCSI_HOST_TEMPLATE_USE_HOST_WIDE_TAGS

/* Scsi_Host has members use_blk_mq */
#undef HAVE_SCSI_HOST_USE_BLK_MQ

/* SCSI_SCAN_INITIAL is defined */
#undef HAVE_SCSI_SCAN_INITIAL

/* scsi_tcq.h has function scsi_change_queue_type */
#undef HAVE_SCSI_TCQ_SCSI_CHANGE_QUEUE_TYPE

/* scsi_tcq.h has function scsi_init_shared_tag_map */
#undef HAVE_SCSI_TCQ_SCSI_INIT_SHARED_TAG_MAP

/* scsi_transfer_length is defined */
#undef HAVE_SCSI_TRANSFER_LENGTH

/* select_queue_fallback_t is defined */
#undef HAVE_SELECT_QUEUE_FALLBACK_T

/* is defined */
#undef HAVE_SET_NETDEV_HW_FEATURES

/* set_phys_id is defined */
#undef HAVE_SET_PHYS_ID

/* set_phys_id is defined in ethtool_ops_ext */
#undef HAVE_SET_PHYS_ID_EXT

/* struct se_cmd has member prot_checks */
#undef HAVE_SE_CMD_HAS_PROT_CHECKS

/* target_core_base.h se_cmd transport_complete_callback has three params */
#undef HAVE_SE_CMD_TRANSPORT_COMPLETE_CALLBACK_HAS_THREE_PARAM

/* SG_MAX_SEGMENTS is defined */
#undef HAVE_SG_MAX_SEGMENTS

/* SIOCGHWTSTAMP is defined */
#undef HAVE_SIOCGHWTSTAMP

/* skb_add_rx_frag has 5 params */
#undef HAVE_SKB_ADD_RX_FRAG_5_PARAMS

/* skb_flow_dissect_flow_keys has 3 parameters */
#undef HAVE_SKB_FLOW_DISSECT_FLOW_KEYS_HAS_3_PARAMS

/* skb_inner_network_header is defined */
#undef HAVE_SKB_INNER_NETWORK_HEADER

/* skb_inner_transport_header is defined */
#undef HAVE_SKB_INNER_TRANSPORT_HEADER

/* skb_inner_transport_offset is defined */
#undef HAVE_SKB_INNER_TRANSPORT_OFFSET

/* skb_pull_inline is defined */
#undef HAVE_SKB_PULL_INLINE

/* skb_set_hash is defined */
#undef HAVE_SKB_SET_HASH

/* skb_shared_info has union tx_flags */
#undef HAVE_SKB_SHARED_INFO_UNION_TX_FLAGS

/* skb_transport_header_was_set is defined */
#undef HAVE_SKB_TRANSPORT_HEADER_WAS_SET

/* skb_vlan_pop is defined */
#undef HAVE_SKB_VLAN_POP

/* skwq_has_sleeper is defined */
#undef HAVE_SKWQ_HAS_SLEEPER

/* csum_level is defined */
#undef HAVE_SK_BUFF_CSUM_LEVEL

/* encapsulation is defined */
#undef HAVE_SK_BUFF_ENCAPSULATION

/* xmit_more is defined */
#undef HAVE_SK_BUFF_XMIT_MORE

/* sk_clone_lock is defined */
#undef HAVE_SK_CLONE_LOCK

/* sk_wait_data has 3 params */
#undef HAVE_SK_WAIT_DATA_3_PARAMS

/* split_page is exported by the kernel */
#undef HAVE_SPLIT_PAGE_EXPORTED

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* strnicmp is defined */
#undef HAVE_STRNICMP

/* struct dma_attrs is defined */
#undef HAVE_STRUCT_DMA_ATTRS

/* ieee_qcn is defined */
#undef HAVE_STRUCT_IEEE_QCN

/* SWITCHDEV_ATTR_ID_PORT_PARENT_ID is defined */
#undef HAVE_SWITCHDEV_ATTR_ID_PORT_PARENT_ID

/* HAVE_SWITCHDEV_OPS is defined */
#undef HAVE_SWITCHDEV_OPS

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* target_core_fabric.h has target_reverse_dma_direction function */
#undef HAVE_TARGET_FABRIC_HAS_TARGET_REVERSE_DMA_DIRECTION

/* target_put_sess_cmd in target_core_fabric.h has 1 parameter */
#undef HAVE_TARGET_PUT_SESS_CMD_HAS_1_PARAM

/* target_core_base.h se_cmd supports compare_and_write */
#undef HAVE_TARGET_SUPPORT_COMPARE_AND_WRITE

/* tcf_exts_to_list is defined */
#undef HAVE_TCF_EXTS_TO_LIST

/* tcf_vlan_action is defined */
#undef HAVE_TCF_VLAN_ACTION

/* tcf_vlan_push_proto is defined */
#undef HAVE_TCF_VLAN_PUSH_PROTO

/* tcf_vlan_push_vid is defined */
#undef HAVE_TCF_VLAN_PUSH_VID

/* HAVE_TC_CLSFLOWER_STATS is defined */
#undef HAVE_TC_CLSFLOWER_STATS

/* struct tc_cls_flower_offload is defined */
#undef HAVE_TC_FLOWER_OFFLOAD

/* include/net/tc_act/tc_vlan.h exists */
#undef HAVE_TC_VLAN_H

/* timecounter_adjtime is defined */
#undef HAVE_TIMECOUNTER_ADJTIME

/* linux/timecounter.h exists */
#undef HAVE_TIMECOUNTER_H

/* max_tx_rate is defined */
#undef HAVE_TX_RATE_LIMIT

/* type cycle_t is defined in linux/types.h */
#undef HAVE_TYPE_CYCLE_T

/* uapi/linux/if_bonding.h exists */
#undef HAVE_UAPI_IF_BONDING_H

/* uapi/linux/if_ether.h exist */
#undef HAVE_UAPI_LINUX_IF_ETHER_H

/* udp4_hwcsum is exported by the kernel */
#undef HAVE_UDP4_HWCSUM

/* udp_tunnel_get_rx_info is defined */
#undef HAVE_UDP_TUNNEL_GET_RX_INFO

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* unregister_netdevice_queue is defined */
#undef HAVE_UNREGISTER_NETDEVICE_QUEUE

/* update_pmtu has 4 paramters */
#undef HAVE_UPDATE_PMTU_4_PARAMS

/* include/generated/utsrelease.h exists */
#undef HAVE_UTSRELEASE_H

/* va_format is defined */
#undef HAVE_VA_FORMAT

/* spoofchk is defined */
#undef HAVE_VF_INFO_SPOOFCHK

/* trust is defined */
#undef HAVE_VF_INFO_TRUST

/* ndo_set_vf_tx_rate is defined */
#undef HAVE_VF_TX_RATE

/* vlan_proto is defined */
#undef HAVE_VF_VLAN_PROTO

/* vlan_dev_get_egress_qos_mask is defined */
#undef HAVE_VLAN_DEV_GET_EGRESS_QOS_MASK

/* vlan_features_check is defined */
#undef HAVE_VLAN_FEATURES_CHECK

/* __vlan_get_protocol defined */
#undef HAVE_VLAN_GET_PROTOCOL

/* vlan_gro_receive is defined in if_vlan.h */
#undef HAVE_VLAN_GRO_RECEIVE

/* vlan_hwaccel_rx is defined in if_vlan.h */
#undef HAVE_VLAN_HWACCEL_RX

/* ndo_add_vxlan_port is defined */
#undef HAVE_VXLAN_DYNAMIC_PORT

/* vxlan_get_rx_port is defined */
#undef HAVE_VXLAN_ENABLED

/* vxlan_features_check is defined */
#undef HAVE_VXLAN_FEATURES_CHECK

/* vxlan_gso_check is defined */
#undef HAVE_VXLAN_GSO_CHECK

/* WQ_HIGHPRI is defined */
#undef HAVE_WQ_HIGHPRI

/* WQ_MEM_RECLAIM is defined */
#undef HAVE_WQ_MEM_RECLAIM

/* WQ_NON_REENTRANT is defined */
#undef HAVE_WQ_NON_REENTRANT

/* WQ_UNBOUND is defined */
#undef HAVE_WQ_UNBOUND

/* WQ_UNBOUND_MAX_ACTIVE is defined */
#undef HAVE_WQ_UNBOUND_MAX_ACTIVE

/* xdp is defined */
#undef HAVE_XDP_BUFF

/* struct xps_map is defined */
#undef HAVE_XPS_MAP

/* __cancel_delayed_work is defined */
#undef HAVE___CANCEL_DELAYED_WORK

/* __ethtool_get_link_ksettings is defined */
#undef HAVE___ETHTOOL_GET_LINK_KSETTINGS

/* napi_gro_flush has 2 parameters */
#undef NAPI_GRO_FLUSH_2_PARAMS

/* if getapp returns int */
#undef NDO_GETAPP_RETURNS_INT

/* if getnumtcs returns int */
#undef NDO_GETNUMTCS_RETURNS_INT

/* ndo_select_queue has accel_priv */
#undef NDO_SELECT_QUEUE_HAS_ACCEL_PRIV

/* if setapp returns int */
#undef NDO_SETAPP_RETURNS_INT

/* netdev_master_upper_dev_link gets 4 parameters */
#undef NETDEV_MASTER_UPPER_DEV_LINK_4_PARAMS

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* The size of `unsigned long long', as computed by sizeof. */
#undef SIZEOF_UNSIGNED_LONG_LONG

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Version number of package */
#undef VERSION
